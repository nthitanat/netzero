import React from "react";
import styles from "./TreeListCard.module.scss";
import useTreeListCard from "./useTreeListCard";
import TreeListCardHandler from "./TreeListCardHandler";

export default function TreeListCard({ 
    trees = [],
    selectedTree = null,
    onTreeClick,
    onLocationMapView,
    theme = "tree"
}) {
    const { stateTreeListCard, setTreeListCard } = useTreeListCard({
        selectedTree
    });
    const handlers = TreeListCardHandler(stateTreeListCard, setTreeListCard, {
        onTreeClick,
        onLocationMapView
    });
    
    return (
        <div className={`${styles.Container} ${styles[`${theme}-theme`]}`}>
            <div className={styles.Header}>
                <h2 className={styles.Title}>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ</h2>
                <div className={styles.Count}>
                    {trees.length} ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
                </div>
            </div>
            
            <div className={styles.TreeList}>
                {trees.length === 0 ? (
                    <div className={styles.EmptyState}>
                        <div className={styles.EmptyIcon}>üå≥</div>
                        <p className={styles.EmptyText}>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÉ‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ</p>
                    </div>
                ) : (
                    trees.map((tree) => (
                        <div
                            key={tree.name}
                            className={`${styles.TreeItem} ${
                                selectedTree?.name === tree.name ? styles.Selected : ''
                            }`}
                        >
                            <div className={styles.TreeIcon}>
                                <span className={styles.Icon}>üå≥</span>
                                <div className={styles.TreeTypeBadge}>
                                    {handlers.getTreeTypeEmoji(tree.name)}
                                </div>
                            </div>
                            
                            <div className={styles.TreeInfo}>
                                <h3 className={styles.TreeName}>{tree.name}</h3>
                                <p className={styles.TreeStats}>
                                    ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {tree.totalCount} ‡∏ï‡πâ‡∏ô ‚Ä¢ {tree.locations.length} ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
                                </p>
                                
                                <div className={styles.LocationsList}>
                                    {tree.locations.slice(0, 3).map((location, index) => (
                                        <div key={index} className={styles.LocationItem}>
                                            <span className={styles.LocationName}>
                                                üìç {location.name}
                                            </span>
                                            <span className={styles.LocationCount}>
                                                {location.count} ‡∏ï‡πâ‡∏ô
                                            </span>
                                            <button
                                                className={styles.ViewLocationButton}
                                                onClick={() => handlers.handleLocationMapView(location)}
                                            >
                                                ‡∏î‡∏π‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
                                            </button>
                                        </div>
                                    ))}
                                    
                                    {tree.locations.length > 3 && (
                                        <div className={styles.MoreLocations}>
                                            ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å {tree.locations.length - 3} ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà
                                        </div>
                                    )}
                                </div>
                            </div>
                            
                            <div className={styles.TreeActions}>
                                <button
                                    className={styles.ViewAllButton}
                                    onClick={() => handlers.handleTreeClick(tree)}
                                >
                                    ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
                                </button>
                            </div>
                        </div>
                    ))
                )}
            </div>
        </div>
    );
}
